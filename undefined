import { VideoPlayer } from './VideoPlayer';
import { StatusDisplay } from './StatusDisplay';
import { QualitySelector } from './QualitySelector';
import { DebugPanel } from './DebugPanel';
import { MediaLoader } from './MediaLoader';
import { HLSService } from './HLSService';
import { ProxyService } from './ProxyService';

class VideoPlayerApp {
  private videoPlayer: VideoPlayer;
  private statusDisplay: StatusDisplay;
  private qualitySelector: QualitySelector;
  private debugPanel: DebugPanel;
  private mediaLoader: MediaLoader;
  private hlsService: HLSService;
  private proxyService: ProxyService;

  constructor() {
    this.videoPlayer = new VideoPlayer();
    this.statusDisplay = new StatusDisplay();
    this.qualitySelector = new QualitySelector();
    this.debugPanel = new DebugPanel();
    this.mediaLoader = new MediaLoader();
    this.hlsService = new HLSService();
    this.proxyService = new ProxyService();

    // Initialize services
    this.videoPlayer.setMediaLoader(this.mediaLoader);
    this.videoPlayer.setStatusDisplay(this.statusDisplay);
    this.videoPlayer.setQualitySelector(this.qualitySelector);
    this.videoPlayer.setDebugPanel(this.debugPanel);

    this.hlsService.setVideoPlayer(this.videoPlayer);
  }

  public loadVideo(url: string) {
    // Load video using media loader
    this.mediaLoader.loadMedia(url, (media) => {
      if (!this.videoPlayer.isPlaying()) {
        // Start playback with selected quality
        const quality = this.qualitySelector.getSelectedQuality();
        this.videoPlayer.play(media, quality);
      }
    });
  }

  public playPause() {
    this.videoPlayer.togglePlayback();
  }

  public getVideoStatus(): string {
    return this.statusDisplay.getStatusMessage();
  }
}

export { VideoPlayerApp };